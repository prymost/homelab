{
    "name": "K3s Development Environment",
    "build": {
        "dockerfile": "Dockerfile"
    },
    // The Docker-in-Docker Feature installs and starts the daemon automatically
    "features": {
        "ghcr.io/devcontainers/features/docker-in-docker:2": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/common-utils:2": {
            "username": "vscode",
            "userUid": "1000",
            "userGid": "1000",
            "upgradePackages": "true"
        }
    },
    "containerEnv": {
        "CLUSTER_NAME": "my-dev-cluster"
    },
    "mounts": [
        "source=${localEnv:HOME}/.kube,target=/home/vscode/.kube-host,type=bind,consistency=cached"
    ],
    // [1] Use the non-root user provided by the Dockerfile
    // Critical: Give the container nearly all host capabilities
    // Required to run k3s/containerd inside the container
    "privileged": true,
    // [3] Optional: Mount the docker socket from the container's host (the inner DinD runtime)
    // This allows k3d/K3s to see and manage containers within the Dev Container's environment
    // "mounts": [
    //     "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    // ],
    // [4] Extensions you want installed in your Dev Container
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-kubernetes-tools.vscode-kubernetes-tools",
                "redhat.vscode-yaml"
            ]
        }
    },
    // The command to run AFTER the container is created
    "postCreateCommand": "/bin/sh -c 'if k3d cluster list | grep -q $CLUSTER_NAME; then echo \"Cluster '$CLUSTER_NAME' already exists.\"; else echo \"Cluster '$CLUSTER_NAME' not found. Creating...\"; k3d cluster create $CLUSTER_NAME; fi'",
    // Find k3s cluster config in case it was lost during image rebuild
    "postStartCommand": "echo \"export KUBECONFIG=\\\"$(k3d kubeconfig write $CLUSTER_NAME):/home/vscode/.kube-host/config\\\"\" >> /home/vscode/.bashrc",
    // Ports you want to forward to your local machine (e.g., a service you deploy)
    "forwardPorts": [
        8080,
        9000
    ]
}
